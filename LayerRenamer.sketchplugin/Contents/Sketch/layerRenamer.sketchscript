// regexRenamer.sketchscript
// 
// Created by Leonard Pauli, jan 2017
// Copyright Leonard Pauli, jan 2017
// Initially inspired by Rodrigo Soares' RenameIt sketch plugin
// 

@import 'helpers.cocoascript'

var layerRenamerSelect = function(context) {
	
}

var layerRenamerRename = function(context) {
	var doc = context.document
	var selection = context.selection
	var selectionCount = selection.count()
	if (selectionCount == 0) {
		doc.showMessage('No layers selected - no layers to rename')
		return
	}

	// Get past values
	var userDefaults = NSUserDefaults.standardUserDefaults()
	var pastFindStr = userDefaults.objectForKey_("RegExRenamr-find-value") || '(.+)'
	var pastReplaceStr = userDefaults.objectForKey_("RegExRenamr-replace-value") || '$1'

	var alert = showAlert({
		title: 'Rename '+selectionCount+' layer'+(selectionCount==1 ? '' : 's'),
		message: 'Using RegExp :)',
		fields: {
			_find: [pastFindStr, 'What to search for, eg. (.*) for all'],
			_replace: [pastReplaceStr, 'Try $1, %N, %p.t, and %x/y/w/h']},
		buttons: ['Replace All','Cancel'],
		showHelp: function(alert) {
			var msgAlert = showAlert({
				title: 'Replace more powerful with Regular Expressions',
				message: 'Write what you\'re searching for in the first field, and what to replace matches with in the second.'
					+' RegExp are very powerful. To learn more and try some more, check out regexr.com. Tiny cheatsheet:'
					+'\n'
					+'\n'+	'.'								+'\t\t\t\t'+	' Match any character once'
					+'\n'+	'[hk5]'						+'\t\t\t\t'+	' Match any of h, k, or 5 once'
					+'\n'+	'\\w, \\d, \\s'			+'\t\t\t'+	' word character, digit, whitespace'
					+'\n'+	'\\., \\*, \\\\, \\('+'\t\t\t'+	' special characters needs to be escaped'
					+'\n'+	'a*, a+, a?'				+'\t\t\t'+	' 0 or more, 1 or more, 0 or 1'
					+'\n'+	'a{5}, a{2,}, a{1,3}'		+'\t'+	' exactly five, two or more, between one & three'
					+'\n'+	'a+?, a{2,}?'					+'\t\t'+	' match as few as possible'
					+'\n'+	'ab|cd'							+'\t\t\t'+	' match ab or cd'
					+'\n'
					+'\n'+'Use parenthesis to create capture groups; eg. to rename '
					+'"item 57 flower" to "flower-57", we could do find: "(\\d+) (\\w+)", replace with: "$2-$1". '
					+'$1 would reference to first capture group, that is, the number ("\\d+"), etc.'
					+'\n'
					+'\n'+'Variables are also supported, in the replace box:'
					+'\n'+'index  (%N)'+' \tin parent  (%i/I)'+'\t\tdimensions        (%w/h/x/y)'+'\t title (%t)'
					+'\n'+'from 0 (%n)'+' \treversed  (%-N/n)'+ ' \tparent properties  (%p.t/w) '+' % (%%)'
					,
				buttons: ['OK', 'Regexr.com'],
				width: 430
			})
			if (msgAlert.canceled) return true;
			NSWorkspace.sharedWorkspace()
				.openURL(NSURL.URLWithString("http://regexr.com"))
			return true
		}
	})

	var findStr = alert.fields.find.value
	var reg = new RegExp(findStr, 'i')
	var replaceStr = alert.fields.replace.value
	
	var nrOfReplaced = 0
	for (var i=0; i<selectionCount; i++) {
		var layer = selection[i]
		var nameOld = layer.name()
		
		var str = replaceStr
			.replace(/(%%)|%(p\.)?(-)?([txywhnNiI])/g, function(all, escaped, useParent, useReverse, flag) {
			if (escaped) return '%'
			var lyr = layer
			if (useParent) lyr = lyr.parentGroup()
			if (!lyr) return '?'

			if (flag=='n') return !useReverse ? selectionCount-1-i : i
			if (flag=='N') return !useReverse ? selectionCount-i   : i+1
			if (flag=='t') return lyr.name()
			if (flag=='x') return lyr.frame().x()
			if (flag=='y') return lyr.frame().y()
			if (flag=='w') return lyr.frame().width()
			if (flag=='h') return lyr.frame().height()

			var parentLyr = lyr.parentGroup()
			if (!parentLyr) return '?'
			
			var indexInParent = parentLyr.indexOfLayer_(lyr)
			if (flag=='i') return indexInParent
			if (flag=='I') return indexInParent+1

			return all
		})
		var name = nameOld.replace(reg, str)
		if (nameOld!=name) nrOfReplaced++

		layer.setName(name)
	}
	doc.showMessage('Renamed '
		+(selectionCount==nrOfReplaced?'all ':nrOfReplaced+' of ')
		+selectionCount+' layer' + (selectionCount==1?'':'s'))

	// Save for later
	userDefaults.setObject_forKey_(findStr, "RegExRenamr-find-value")
	userDefaults.setObject_forKey_(replaceStr, "RegExRenamr-replace-value")
}